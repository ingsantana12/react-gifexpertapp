{"version":3,"sources":["components/AddCategory.js","helpers/getGifts.js","components/GifGridItems.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifexpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","respuesta","json","data","gifts","map","img","id","title","images","downsized_medium","GifGridItems","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","devRoot","document","getElementById","component","ReactDOM","render"],"mappings":"yMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAMlB,SAEI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCLlBG,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEdC,EAFc,iDAEkCC,UAAUH,GAF5C,+DAGII,MAAMF,GAHV,cAGdG,EAHc,gBAIGA,EAAUC,OAJb,uBAIZC,EAJY,EAIZA,KAGFC,EAAQD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXtB,kBAebM,GAfa,4CAAH,sDCCRO,EAAe,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGtC,OAAO,sBAAKc,UAAU,OAAf,UACH,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCJCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SACxB,ECF0B,SAACA,GAC3B,MAA0Bd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACRxB,EAASC,GAAUwB,MAAK,SAACC,GACvBH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAGZ,CAACpB,IAEGqB,EDb2BK,CAAa1B,GAAjCa,EAAd,EAAQN,KAAca,EAAtB,EAAsBA,QAEtB,OACE,qCACE,mCAAMpB,KAELoB,GAAW,2CAEZ,qBAAKJ,UAAU,8CAAf,SACGH,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAGMA,GAFCA,EAAIC,aEyBNgB,EArCM,WAGnB,MAAoCzC,mBAAS,CAC3C,cADF,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAUA,OACE,qCACE,8CAEA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,uBAIA,6BACG2C,EAAWnB,KAAI,SAACT,GAAD,OAEd,cAAC,EAAD,CAEEA,SAAUA,GADLA,YC1BX6B,G,MAAUC,SAASC,eAAe,SAElCC,EAAY,cAAC,EAAD,IAElBC,IAASC,OAAOF,EAAWH,K","file":"static/js/main.5669d247.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Proptypes from \"prop-types\";\n\nexport const AddCategory = ({ setCategories }) => {\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    };\n\n    const handleSummit = (e) => {\n        e.preventDefault();\n        if (inputValue.trim().length > 2) {\n            setCategories(cats => [inputValue, ...cats]);\n            setInputValue('');\n        }\n\n    }\n\n    return (\n        <form onSubmit={handleSummit}>\n\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    );\n\n};\n\nAddCategory.propTypes = {\n    setCategories: Proptypes.func.isRequired\n}\n","\n\nexport const getGifts = async (category) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=fwQ7fHyam5npBSl1t7nEZv7Mgc6oxs9V`;\n    const respuesta = await fetch(url);\n    const { data } = await respuesta.json();\n\n    // console.log(data)\n    const gifts = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifts;\n}","import React from \"react\";\n\n// export const GifGridItems = (props) => {\nexport const GifGridItems = ({ id, title, url }) => {\n    // console.log(props);\n    // console.log({ id, title, url });\n    return <div className='card'>\n        <img src={url} alt={title} />\n        <p>{title}</p>\n    </div>;\n};\n","import React from \"react\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport { GifGridItems } from \"./GifGridItems\";\n\nexport const GifGrid = ({ category }) => {\n  const { data: images, loading } = useFetchGifs(category);\n\n  return (\n    <>\n      <h3> {category}</h3>\n\n      {loading && <p>Loading...</p>}\n\n      <div className=\"card-grid animate__animated animate__bounce\">\n        {images.map((img) => (\n          <GifGridItems\n            key={img.id}\n            // img={img}\n            {...img}\n          />\n        ))}\n      </div>\n    </>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { getGifts } from \"../helpers/getGifts.js\";\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifts(category).then((imgs) => {\n      setState({\n        data: imgs,\n        loading: false,\n      });\n    });\n  }, [category]);\n\n  return state; //{data:[] , loading: true}\n};\n","import React, { useState } from \"react\";\nimport { AddCategory } from \"./AddCategory\";\nimport { GifGrid } from \"./GifGrid\";\n\nconst GifExpertApp = () => {\n  // const categories = ['One Punch','Samurai X','Dragon Ball'];\n\n  const [categories, setCategories] = useState([\n    \"One Punch\"\n  ]);\n\n  // const handleAdd = () => {\n  //   // setCategories(categories.concat(\"X Men\"));\n  //   // setCategories([...categories, \"X Men\"]);\n  //   setCategories((cats) => [...cats, \"X Men\"]);\n  // };\n\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n\n      <AddCategory setCategories={setCategories} />\n\n      <hr />\n\n      {/* <button onClick={handleAdd}>Agregar</button> */}\n\n      <ol>\n        {categories.map((category) => (\n\n          <GifGrid\n            key={category}\n            category={category}\n          />\n        ))\n        }\n      </ol>\n    </>\n  );\n};\n\nexport default GifExpertApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GifExpertApp from \"./components/GifexpertApp\";\nimport \"./css/index.css\";\n\nconst devRoot = document.getElementById(\"root\");\n\nconst component = <GifExpertApp />;\n\nReactDOM.render(component, devRoot);\n"],"sourceRoot":""}